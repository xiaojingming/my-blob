(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{568:function(t,e,s){"use strict";s.r(e);var a=s(13),c=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("=")]),t._v("精准匹配")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location = /a.html {\n  return 200 'success';\n}\n")])])]),s("blockquote",[s("p",[t._v("当访问a.html时，页面会正常显示"),s("code",[t._v("success")])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("~*")]),t._v("不区分大小写匹配")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~* ^/a.html {\n  return 200 'success';\n}\n")])])]),s("blockquote",[s("p",[t._v("访问如"),s("code",[t._v("a.html、A.html、a.HTML")]),t._v("等页面都会显示"),s("code",[t._v("success")])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("~")]),t._v("区分大小写匹配")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~ ^(?-i)/a.html {\n  return 200 'success';\n}\n")])])]),s("blockquote",[s("p",[t._v("只有访问"),s("code",[t._v("a.html")]),t._v("页面才会显示"),s("code",[t._v("success")])])]),t._v(" "),s("blockquote",[s("p",[t._v("在具有不区分大小写的文件系统（如Mac OS和Windows）的操作系统中，location ~匹配仍然不区分大小写。要强制使用不区分大小写的模式，你需要用(?-i)把它包含在regex本身中")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/")]),t._v("通用匹配")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /a {\n  return 200 'success';\n}\n")])])]),s("h3",{attrs:{id:"匹配优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配优先级"}},[t._v("#")]),t._v(" 匹配优先级")]),t._v(" "),s("blockquote",[s("p",[t._v("A location can either be defined by a prefix string, or by a regular expression.")])]),t._v(" "),s("p",[t._v("location根据定义分为"),s("strong",[t._v("prefix string(前缀字符串)"),s("strong",[t._v("和")]),t._v("regular expression(正则表达式)")])]),t._v(" "),s("p",[t._v("通过几个例子来展示匹配的优先级：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /te {\n  return 200 'te success';\n}\n\nlocation /tes {\n  return 200 'tes success';\n}\n")])])]),s("blockquote",[s("p",[t._v("请求"),s("code",[t._v("/test")]),t._v("时，得到的结果是"),s("code",[t._v("tes success")]),t._v("，因此可以得到结论：前缀字符串的匹配优先级由前缀字符串的长度决定。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~ ^(?-i)/te {\n  return 200 'te success';\n}\n\nlocation ~ ^(?-i)/tes {\n  return 200 'tes success';\n}\n")])])]),s("blockquote",[s("p",[t._v("请求"),s("code",[t._v("/test")]),t._v("时，得到的结果是"),s("code",[t._v("te success")]),t._v("，因此可以得到结论：正则表达式的匹配优先级由正则表达式的定义顺序决定。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ^~ /te {\n  return 200 'te success';\n}\n\nlocation ~ ^/tes {\n  return 200 'tes success';\n}\n")])])]),s("blockquote",[s("p",[t._v("请求"),s("code",[t._v("/test")]),t._v("时，得到的结果是"),s("code",[t._v("te success")]),t._v("，因此可以得到结论："),s("code",[t._v("^~")]),t._v("的优先级高于正则表达式")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /test {\n  return 200 'test success';\n}\n\nlocation ~ ^/tes {\n  return 200 'tes success';\n}\n")])])]),s("blockquote",[s("p",[t._v("请求"),s("code",[t._v("/test")]),t._v("时，得到的结果是"),s("code",[t._v("tes success")]),t._v("，因此可以得到的结论：正则的优先级高于前缀表达式")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location = /test {\n  return 200 'test success';\n}\n\nlocation ^~ /test {\n  return 200 'tes success';\n}\n")])])]),s("blockquote",[s("p",[t._v("请求"),s("code",[t._v("/test")]),t._v("时，得到的结果是"),s("code",[t._v("test success")]),t._v("，因此可以得到的结论："),s("code",[t._v("=")]),t._v("的优先级高于"),s("code",[t._v("^~")])])]),t._v(" "),s("h4",{attrs:{id:"结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),s("p",[t._v("在优先级上，"),s("code",[t._v("=")]),t._v(" "),s("code",[t._v(">")]),t._v(" "),s("code",[t._v("^~")]),t._v(" "),s("code",[t._v(">")]),t._v(" 正则表达式 "),s("code",[t._v(">")]),t._v(" 前缀表达式")]),t._v(" "),s("h3",{attrs:{id:"root和alias的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#root和alias的区别"}},[t._v("#")]),t._v(" root和alias的区别")]),t._v(" "),s("p",[t._v("我们先定义这样的匹配规则，并在"),s("code",[t._v("html")]),t._v("文件夹下创建了"),s("code",[t._v("index.html")]),t._v("和"),s("code",[t._v("index1.html")]),t._v("两个文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /test/ {\n  root html/test;\n}\n")])])]),s("blockquote",[s("p",[t._v("当我们访问"),s("code",[t._v("/test/index.html")]),t._v("时，页面会报404的错误，在错误日志中看到如下的内容：\n"),s("code",[t._v('/html/test/test/index.html" failed')])])]),t._v(" "),s("blockquote",[s("p",[t._v("我们可以看到访问的是"),s("code",[t._v("html/test/test/index.html")]),t._v("，我们修改配置：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /test/ {\n  alias html/test;\n}\n")])])]),s("blockquote",[s("p",[t._v("访问的就是正确的内容，因此我们得出结论："),s("strong",[t._v("root 是拼接 root + location 而 alias 是用 alias 替换 location")]),t._v("，所以在上面的配置中，更适合使用"),s("code",[t._v("alias")]),t._v("，或者修改为"),s("code",[t._v("root html;")]),t._v("即可")])])])}),[],!1,null,null,null);e.default=c.exports}}]);