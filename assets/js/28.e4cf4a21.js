(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{581:function(e,t,s){"use strict";s.r(t);var a=s(13),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[e._v("#")]),e._v(" Includes")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/type-challenges/type-challenges/blob/main/questions/00898-easy-includes/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-challenge github地址"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("Implement the JavaScript Array.includes function in the type system. A type takes the two arguments. The output should be a boolean true or false.")]),e._v(" "),s("blockquote",[s("p",[e._v("(实现 "),s("code",[e._v("JavaScript")]),e._v(" 的 "),s("code",[e._v("Array.includes")]),e._v(" 方法，这个类型接受两个参数，返回的类型要么是 "),s("code",[e._v("true")]),e._v(" 要么是 "),s("code",[e._v("false")]),e._v("。)")])]),e._v(" "),s("p",[e._v("For example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type isPillarMen = Includes<['Kars', 'Esidisi', 'Wamuu', 'Santana'], 'Dio'> // expected to be `false`\n")])])]),s("p",[e._v("一开始的思路是这样的：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type Includes<T extends any[], U> = U extends T[number] ? true : false\n")])])]),s("p",[e._v("🤔但是有很多的测试用例无法通过：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type Res1 = Includes<[{}], { a: 'A' }>; // false\ntype Res2 = Includes<[boolean, 2, 3, 5, 6, 7], false>; // false\ntype Res3 = Includes<[true, 2, 3, 5, 6, 7], boolean>; // false\ntype Res4 = Includes<[{ a: 'A' }], { readonly a: 'A' }>; // false\ntype Res5 = Includes<[{ readonly a: 'A' }], { a: 'A' }>; // false\ntype Res6 = Includes<[1], 1 | 2>; // false\ntype Res7 = Includes<[1 | 2], 1>; // false\n")])])]),s("p",[e._v("我们需要进一步判断两个类型是否相等，而不仅仅是继承")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type IsEqual<T, U> =\n  (<K>() => K extends T ? true : false) extends (<K>() => K extends U) ? true : false;\n")])])]),s("p",[e._v("上面是判断两类型是否相等"),s("a",{attrs:{href:"https://stackoverflow.com/questions/68961864/how-does-the-equals-work-in-typescript",target:"_blank",rel:"noopener noreferrer"}},[e._v("具体解释😂"),s("OutboundLink")],1),e._v("，接下来我们递归数组进行判断就可以啦")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("type Includes<T extends readonly any[], U> = T extends [infer First, ...infer Rest]\n  ? IsEqual<First, U> extends true\n    ? true\n    : Includes<Rest, U>\n  : false;\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);