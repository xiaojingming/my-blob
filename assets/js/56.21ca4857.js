(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{609:function(t,e,r){"use strict";r.r(e);var s=r(13),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"trimright"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trimright"}},[t._v("#")]),t._v(" TrimRight")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/type-challenges/type-challenges/blob/main/questions/04803-medium-trim-right/README.zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("type-challenge-trimRight github地址"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("难度：中等")]),t._v(" "),r("h4",{attrs:{id:"题目描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),r("p",[t._v("Implement TrimRight"),r("T",[t._v(" which takes an exact string type and returns a new string with the whitespace ending removed.")])],1),t._v(" "),r("blockquote",[r("p",[t._v("(实现 "),r("code",[t._v("TrimRight<T>")]),t._v(" ，它接收确定的字符串类型并返回一个新的字符串，其中新返回的字符串删除了原字符串结尾的空白字符串。)")])]),t._v(" "),r("p",[t._v("For example:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type Trimed = TrimRight<'  Hello World  '> // 应推导出 '  Hello World'\n")])])]),r("p",[t._v("只需要通过模板字符串就可以实现这个功能")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type TrimRight<S extends string> = S extends `${infer Rest}${' '}`\n  ? TrimRight<Rest>\n  : S \n")])])]),r("p",[t._v("但是上面的代码在测试用例中存在不能通过的情况")]),t._v(" "),r("p",[r("code",[t._v("<TrimRight<' foo bar \\n\\t '>")]),t._v("和\n"),r("code",[t._v("TrimRight<'\\n\\t '>")]),t._v("所以需要加上"),r("code",[t._v("\\n")]),t._v("和"),r("code",[t._v("\\t")]),t._v("的判断")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type TrimRight<S extends string> = S extends `${infer Rest}${' ' | '\\n' | '\\t'}`\n  ? TrimRight<Rest>\n  : S\n")])])]),r("p",[t._v("这样就实现了"),r("code",[t._v("TrimRight")]),t._v("的功能。同样的，我们还可以实现"),r("code",[t._v("TrimLeft")]),t._v("和"),r("code",[t._v("Trim")]),t._v("两个功能。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type TrimLeft<T extends string> = T extends `${' ' | '\\n' | '\\t'}${infer Rest}`\n  ? TrimLeft<Rest>\n  : T;\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type Trim<S extends string> = TrimRight<TrimLeft<S>>\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);