(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{585:function(e,t,n){"use strict";n.r(t);var s=n(13),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[e._v("#")]),e._v(" Join")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/type-challenges/type-challenges/blob/main/questions/05310-medium-join/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-challenge github地址"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("难度：中等")]),e._v(" "),n("h4",{attrs:{id:"题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),n("p",[e._v("Implement the type version of Array.join, Join<T, U> takes an Array T, string or number U and returns the Array T with U stitching up.")]),e._v(" "),n("blockquote",[n("p",[e._v("(实现类型"),n("code",[e._v("Array.join")]),e._v("函数)")])]),e._v(" "),n("p",[e._v("For example:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("type Res = Join<['a', 'p', 'p', 'l', 'e'], '-'>; // expected to be 'a-p-p-l-e'\ntype Res1 = Join<['Hello', 'World'], ' '>; // expected to be 'Hello World'\ntype Res2 = Join<['2', '2', '2'], 1>; // expected to be '21212'\ntype Res3 = Join<['o'], 'u'>; // expected to be 'o'\n")])])]),n("p",[e._v("这道题的思路并不复杂，我们使用第三个参数"),n("code",[e._v("S")]),e._v("来记录上一次的结果，并通过递归累加之前的结果，最后一次执行不添加"),n("code",[e._v("U")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("type Join<T extends any[], U extends string | number, S extends string = ''> = T extends [infer First, ...infer Rest]\n  ? Join<Rest, U, `${S}${Extract<First, string>}${Rest['length'] extends 0 ? '' : U}`>\n  : S\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);