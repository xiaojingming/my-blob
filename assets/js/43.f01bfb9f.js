(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{595:function(e,t,r){"use strict";r.r(t);var n=r(13),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"percentageparser"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#percentageparser"}},[e._v("#")]),e._v(" PercentageParser")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/type-challenges/type-challenges/blob/main/questions/01978-medium-percentage-parser/README.zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-challenge-PercentageParser github地址"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("难度：中等")]),e._v(" "),r("h4",{attrs:{id:"题目描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),r("p",[e._v("Implement PercentageParser. According to the "),r("code",[e._v("/^(\\+|\\-)?(\\d*)?(\\%)?$/")]),e._v(" regularity to match T and get three matches.")]),e._v(" "),r("p",[e._v("The structure should be: [plus or minus, number, unit] If it is not captured, the default is an empty string.")]),e._v(" "),r("blockquote",[r("p",[e._v("实现类型 PercentageParser。根据规则 "),r("code",[e._v("/^(\\+|\\-)?(\\d*)?(\\%)?$/")]),e._v(" 匹配类型 T。\n匹配的结果由三部分组成，分别是：[正负号, 数字, 单位]，如果没有匹配，则默认是空字符串。")])]),e._v(" "),r("p",[e._v("For example:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('type PString1 = \'\'\ntype PString2 = \'+85%\'\ntype PString3 = \'-85%\'\ntype PString4 = \'85%\'\ntype PString5 = \'85\'\n\ntype R1 = PercentageParser<PString1> // expected [\'\', \'\', \'\']\ntype R2 = PercentageParser<PString2> // expected ["+", "85", "%"]\ntype R3 = PercentageParser<PString3> // expected ["-", "85", "%"]\ntype R4 = PercentageParser<PString4> // expected ["", "85", "%"]\ntype R5 = PercentageParser<PString5> // expected ["", "85", ""]\n')])])]),r("p",[e._v("TS无法直接实现正则的功能，因此需要通过"),r("code",[e._v("infer")]),e._v("枚举各种情况，解决方法如下")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("type Signal = '+' | '-';\ntype Percentage = '%';\ntype GetNumsOrPercentage<T extends string> = T extends `${infer Others}${Percentage}`\n  ? [Others, Percentage]\n  : [T, '']\ntype PercentageParser<T extends string> = T extends `${infer First}${infer Others}`\n  ? [First, ...GetNumsOrPercentage<Others>]\n  : ['', ...GetNumsOrPercentage<T>]\n: ['', '', ''];\n")])])]),r("p",[e._v("首先定义了Signal和Percentage两个字面量类型，判断是否以"),r("code",[e._v("+ | -")]),e._v("开头，当泛型T以符号开头时，将剩余的部分传入第二个类型别名"),r("code",[e._v("GetNumsOrPercentage")]),e._v("；"),r("code",[e._v("GetNumsOrPercentage")]),e._v("会判断是否以"),r("code",[e._v("%")]),e._v("结尾，并生成对应的数组类型，并且通过扩展运算符展开；最后加上题目中要求的"),r("strong",[e._v("如果没有匹配，返回"),r("code",[e._v("['', '', '']")]),e._v("。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);